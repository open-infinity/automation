#!/bin/bash

#
# Adds the current shard to the cluster, if this node is the PRIMARY.
#

VARFILE=`mktemp`
DOMAIN=`echo "<%=mongod_replicaset_node%>" | sed -n 's/[^.]*\.//p' | sed "s/:.*//"`
if [ "x$DOMAIN" != "x" ] ; then
    DOMAIN=.$DOMAIN
fi

echo "*** Adding replica set <%= mongod_replicaset_name %> to the sharded cluster ***"

# Wait until the mongos is up and running
while : 
do
    mongo --quiet <%=mongo_mongos_node%> >$VARFILE << EOF
    db.serverStatus()["ok"]
EOF
    OK=`cat $VARFILE`
    if [ "$OK" == "1" ] ; then
        break
    fi
    
    echo "Waiting for the <%=mongo_mongos_node%> (mongos) to become online successfully..."
    sleep 2
done

# Get name of this node as mongo knows it
echo "" > $VARFILE
while : 
do
    mongo --quiet localhost:<%=_mongod_port%> >$VARFILE << EOF
    db.serverStatus().host
EOF
    LOCAL_MONGOD=`cat $VARFILE`
    if [ "$LOCAL_MONGOD" != "" ] ; then
        LOCAL_MONGOD=`echo "$LOCAL_MONGOD" | sed "s/\..*//" | sed "s/:.*//"`$DOMAIN:<%=_mongod_port%>
        break
    fi
    
    echo "Waiting for the local mongod to become online..."
    sleep 2
done
echo "Local mongod is known as '$LOCAL_MONGOD'"

# Add shard logic
MONGOD_REPLICASET_NODE=<%=mongod_replicaset_node%>
if [ "$MONGOD_REPLICASET_NODE" == "$LOCAL_MONGOD" ] ; then
    # Add shard
    echo "Adding shard to the cluster"
    mongo --quiet <%=mongo_mongos_node%> >$VARFILE << EOF
        r = sh.addShard( "<%=mongod_replicaset_name%>/$LOCAL_MONGOD" );
        r.ok
        
EOF
    OK=`cat $VARFILE`
    if [ "$OK" == "1" ] ; then
        echo "Shard adding completed. Remember to run db.runCommand( { enableSharding: <database> } ) for each databases needing sharding."
    else
        echo "Adding shard <%=mongod_replicaset_name%> to cluster failed" &>/dev/stderr
    fi
fi

rm $VARFILE

